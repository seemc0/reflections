What happens when you initialize a repository? Why do you need to do it?

Git creates the envirnoment in which you can save the commits of your project.

How is the staging area different from the working directory and the repository? What value do you think it offers?
The staging area is a temporary holding directory for a future commit. It allows you to add multiple files to one commit.


How can you use the staging area to make sure you have one commit per logical change?
Only add the files that pertain to the particular commit you are wanting to make.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
When you are building out a feature that does not need to be incorporated in to the master branch or when developing a feature that is experimental. Branches do not affect the master branch and can be incorporated at a later stage using merge.

How do the diagrams help you visualize the branch structure?
They show the path the branches take and allow you to immediately see which branches are accessible and which aren't. They also give a good visual reprensetation of how many commits have been performed while working on a branch.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
Merging two branches results in one branch that contains changes from both.

What are the pros and cons of Git’s automatic merging vs. always doing merges manually?
Automatic mergin saves a lot of time. Doing them manually means you will seldom merge incorrect code, but will take a lot more time.